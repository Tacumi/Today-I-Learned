* 2021/10/06
** elmの勉強した。
WebSocketを利用したアプリケーションの実装方法を学んだ。
いまいちよくわからない。なんか読み込み中の画像がローディングという形ではなく同じ画像をコピーしたような状態になっていたので修正したくなった。
けど地震あったし眠くなってきたから今日はここまで。
地震こわかった。フレンチドリッパーが壊れてしまったのがかなしかった。
* 2021/10/05
** elmの勉強した。
REST APIを利用したアプリケーションの作り方を辿ったがまだよくわからん。
関数がモリモリ生えて分割しすぎでねぇかなと考えながら手を動かした。
あとWindowsでnodejs環境作るのが面倒なのでelm replを利用するところは飛ばして実装だけを進めていた。
コンパイルが通らない部分があったけどtype Resultを追加していたのが原因だった。
モジュールの中で定義されている型が優先されてResult.Resultが隠されていた。
* 2021/10/04
** elmの勉強した。3章まで進めることができた。
どうやらelmはシングルページのWebアプリケーションを作成することに特化しているように見える。
Viewの個々の部品は基本的にHtml Msg型を返すように実装することが肝要らしい。
onInputイベントの型注釈とその説明がよくわからん。もうちょっと複雑な例だと分かるんかな。
* 2021/10/03
** elmの勉強ディレクトリを作成した。関数型ちょっとやってたし。
** プログラミングElm(マイナビ)を使う。
* 2021/10/02
** TILリポジトリというものを知った。
*** Today I Learnedということで今日学んだことを追加するらしい。
** モンティホール問題が本当にそうなのか確認するためにシミュレーション用のプログラムを書いた。
*** もうちょっといい感じに作れたような気もする。